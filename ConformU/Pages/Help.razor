@page "/Help"
@using ASCOM.Common
@using ASCOM.Common.Alpaca

<h2>Help</h2>

<h4 style="margin-top: 20px">ConformU Version @assemblyVersion</h4>
<p>(c) Peter Simpson (ASCOM Initiative) 2021-@DateTime.Now.Year</p>

<p style="margin-top: 20px">For support please post on the <a href="https://ascomtalk.groups.io/g/Developer" target="_blank">ASCOM Developer Support Forum</a></p>

<h4 style="margin-top: 40px">ASCOM Interface Conformance</h4>
<p>
    Conform Universal is a client application for both Windows COM drivers and Alpaca devices that assesses their behaviour for conformance with requirements given in the relevant ASCOM Interface specification.
    Responses to both expected (happy path) and unexpected (unhappy path) inputs are assessed.
</p>
<h5>How to check ASCOM Interface Conformance</h5>
<p>
    First select a device through the <b>Select Device</b> page and then use the <b>Home</b> page to test compliance.
</p>

<h4 style="margin-top: 40px">Alpaca Protocol Conformance</h4>
<p>
    The Alpaca protocol uses HTTP and REST to communicate with a device that implements one of the ASCOM device interfaces. The protocol specifies command and
    parameter names, together with correct casing, which are required for proper execution. The <b>Check Alpaca Protocol</b> test confirms that an Alpaca device is compliant with Alpaca requirements,
    including correct reporting of missing parameters and handling of commands and parameters that are incorrectly cased..
</p>
<p>
    The Alpaca protocol check does not attempt to confirm that a device is conformant with ASCOM interface specification requirements, use the conformance test on the Home page for this. The purpose 
    of the Alpaca Protocol Check is to confirm that Alpaca specific command handling and happy / unhappy Alpaca path responses are as expected.
</p>
<p>
    Unlike the <b>Home</b> page ASCOM device conformance check, the Alpaca check is designed to change device state as little as possible e.g. telescope
    devices are commanded to move to their current co-ordinates and focusers are commanded to move to their current position. For some operations state change is unavoidable, such as when parking a scope or dome, but
    these cases have been reduced as far as possible.
</p>
<h5>How to check Alpaca protocol use</h5>
<p>
    First select a device through the <b>Select Device</b> page and then use the <b>Check Alpaca Protocol</b> page to test compliance.
</p>

<h4 style="margin-top: 40px">Command Line Operation</h4>
<p>
    In addition to operating as a GUI application, Conform Universal can be used as a command line application to support automated device testing in build processes. In command line mode
    output appears in the console window and the exit code can be used as a success / fail indicator.
</p>
<p>
    <b>Command line interface changes:</b> Please note that the command line interface has changed in Conform Universal version 2 so that multiple test capabilities can be accessed in a consistent way that
    provides for future expansion. <i>Test scripts that use the version 1 command line interface will need to be revised to work with the new interface.</i>
</p>
<p>
    The new command line format is: <b>conformu</b> [COMMAND] [OPTIONS] and the primary commands are:
    <table id="CommandOptions">
        <tr>
            <th style="width:390px">Command</th>
            <th>Description</th>
        </tr>
        <tr>
            <td><tt><b>conformance</b> DEVICE_IDENTIFIER</tt></td>
            <td>Run a full conformance check on the specified COM driver or Alpaca device.</td>
        </tr>
        <tr>
            <td><tt><b>alpacaprotocol</b> ALPACA_URI</tt></td>
            <td>Run an Alpaca protocol check on the specified Alpaca device.</td>
        </tr>
        <tr>
            <td><tt><b>conformance-settings</b></tt></td>
            <td>Run a full conformance check on the specified COM driver or Alpaca device configured in the supplied settings file.</td>
        </tr>
        <tr>
            <td><tt><b>alpacaprotocol-settings</b></tt></td>
            <td>Run an Alpaca protocol check on the device configured in the supplied settings file.</td>
        </tr>
    </table>
</p>
<p>
    <b>DEVICE_IDENTIFIER</b> can either be a COM ProgID such as ASCOM.Simulator.Camera or an Alpaca URI such as http://192.168.1.42:11111/api/v1/telescope/0. The application will
    automatically determine the technology type and device type from the device identifier.
</p>
<p>
    <b>ALPACA_URI</b> is an Alpaca URI such as http://192.168.1.42:11111/api/v1/telescope/0. The device type will be inferred from the URI.
</p>
<p>
    Full details of all commands and command options are available by entering <b>conformu --help</b> at a command prompt.
</p>

<h4 style="margin-top: 40px">Command Line Exit Codes</h4>
<p>
    The conformu command exit codes behave as follows:
    <table id="commandline">
        <tr>
            <th style="width:390px">Value Range</th>
            <th>Meaning</th>
        </tr>
        <tr>
            <td><tt>Exit code = 0</tt></td>
            <td>Successful test run with no issues or configuration alerts.</td>
        </tr>
        <tr>
            <td><tt>Exit code &gt; 0</tt></td>
            <td>The test revealed one or more issues or configuration alerts, the exit code indicates the number of issues  and alerts.</td>
        </tr>
        <tr>
            <td><tt>Exit code &lt; 0</tt></td>
            <td>Conform Universal experienced an unexpected error while conducting the test.</td>
        </tr>
    </table>
</p>

<h4 style="margin-top: 40px">Enum values in the settings file</h4>
<p>
    When manually editing the settings file please be aware that the settings listed below are converted to enum values within the application and must have one of the values in the <b>Possible Values</b> list.
    Any casing is accepted but misspelling will result in the file being reported as corrupt.
</p>
<p>
    <table id="commandline">
        <tr>
            <th style="width:390px">Setting</th>
            <th>Possible Values</th>
        </tr>
        <tr>
            <td><tt>DeviceType</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(DeviceTypes)))</td>
        </tr>
        <tr>
            <td><tt>AlpacaDevice:AscomDeviceType</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(DeviceTypes)))</td>
        </tr>
        <tr>
            <td><tt>AlpacaDevice:ServiceType</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(ServiceType)))</td>
        </tr>
        <tr>
            <td><tt>AlpacaConfiguration:AccessServiceType</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(ServiceType)))</td>
        </tr>
        <tr>
            <td><tt>AlpacaConfiguration:ImageArrayTransferType</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(ImageArrayTransferType)))</td>
        </tr>
        <tr>
            <td><tt>ComConfiguration:ComAccessMechanic</tt></td>
            <td>@string.Join(", ",Enum.GetNames(typeof(ComAccessMechanic)))</td>
        </tr>
    </table>
</p>


@code
{
    string assemblyVersion;

    protected override void OnInitialized()
    {
        assemblyVersion = $"{Update.ConformuVersionDisplayString})";
    }

}