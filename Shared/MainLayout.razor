@inherits LayoutComponentBase
@inject ConformLogger conformLogger
@inject ConformConfiguration configuration
@using static ConformU.ConformConstants

@* Top level page layout including page header at top and navigation bar at left *@
<div class="sidebar">
    <NavMenu />
</div>
<div class="main">
    <div class="top-row px-4">
        <span>Current device - @deviceName (@deviceTechnology @deviceType)</span>
        <a href="https://ascom-standards.org" target="_blank">ASCOM Initiative</a>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>
<div>
    <RadzenNotification />
</div>

@code
{
    private string deviceName;
    private DeviceType deviceType;
    private DeviceTechnology deviceTechnology;

    /// <summary>
    /// Event handler for page initialised event
    /// </summary>
    /// <remarks>Hook up an event handler to redisplay the page header whenever the configuraiton is changed. </remarks>
    protected override void OnInitialized()
    {
        configuration.ConfigurationChanged += OnConfigurationChanged;
        SetDisplayVariables();
    }

    /// <summary>
    /// Event hander called when the configuration is changed
    /// </summary>
    /// <param name="caller"></param>
    /// <param name="args"></param>
    private void OnConfigurationChanged(object caller, EventArgs args)
    {
        SetDisplayVariables();
        InvokeAsync(StateHasChanged);
    }

    private void SetDisplayVariables()
    {
        conformLogger.LogDebug("MainLayout - SetDisplayVariables", $"Device description: {configuration.Settings.DeviceName} {configuration.Settings.DeviceType} {configuration.Settings.DeviceTechnology}");
        if (configuration.Settings.DeviceTechnology == DeviceTechnology.Alpaca)
        {
            deviceName = $"{configuration.Settings.DeviceName} - {configuration.Settings.AlpacaDevice.IpAddress}:{configuration.Settings.AlpacaDevice.IpPort}";
        }
        else
        {
            deviceName = configuration.Settings.DeviceName;
        }
        deviceType = configuration.Settings.DeviceType;
        deviceTechnology = configuration.Settings.DeviceTechnology;

    }
}