@page "/"
@namespace ConformU.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Conform Universal</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css">

    <!-- Add icon library -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="Server" />
    </app>

    <div id="conform-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

    <script>
        function setTitle(title) {
            document.title = title;
        }
        function XXscrollToBottom(ref) {
            ref.scrollTop = ref.scrollHeight;
        }
    </script>

    <script>
        function CloseDownApplication() {
            window.open("/CloseApplication");
        }
    </script>

    <script>
        document.onkeydown = function () {
            switch (event.keyCode) {
                case 116: //F5 button
                    event.returnValue = false;
                    event.keyCode = 0;
                    return false;
                case 82: //R button
                    if (event.ctrlKey) {
                        event.returnValue = false;
                        event.keyCode = 0;
                        return false;
                    }
            }
        }
    </script>


    @*<script>
            window.addEventListener('beforeunload', function (e) {
                e.preventDefault();
                e.returnValue = '';
            });
        </script>*@

    @*<script>
            window.addEventListener('beforeunload', (event) => {
                event.preventDefault();
                // Google Chrome requires returnValue to be set.
                event.returnValue = '';
            });
        </script>*@

    <!--Return position information for a control with the supplied ID-->
    <script>GetBoundingClientRect = (elementId) => { return document.getElementById(elementId).getBoundingClientRect(); };</script>
    <script>ScrollToBottom = (elementId) => { document.getElementById(elementId).scrollTop = document.getElementById(elementId).scrollHeight; };</script>
</body>
</html>
